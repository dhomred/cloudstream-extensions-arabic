# 🐳 Docker Compose - CloudStream Extensions Arabic
# هذا الملف يستخدم لإدارة الحاويات وتشغيل المشروع

version: '3.8'

services:
  # 🎯 خدمة التطبيق الرئيسية
  cloudstream-extensions:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cloudstream-extensions-arabic
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - APP_NAME=cloudstream-extensions-arabic
      - APP_VERSION=2.0.0
      - JAVA_OPTS=-Xmx512m -Xms256m
      - NODE_ENV=production
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./backups:/app/backups
    networks:
      - cloudstream-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "com.dhomred.app=cloudstream-extensions"
      - "com.dhomred.version=2.0.0"
      - "com.dhomred.environment=production"

  # 📊 خدمة المراقبة
  monitoring:
    image: prom/prometheus:latest
    container_name: cloudstream-monitoring
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - cloudstream-network
    depends_on:
      - cloudstream-extensions

  # 📈 خدمة التحليلات
  analytics:
    image: grafana/grafana:latest
    container_name: cloudstream-analytics
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    networks:
      - cloudstream-network
    depends_on:
      - monitoring

  # 🗄️ خدمة قاعدة البيانات
  database:
    image: postgres:15-alpine
    container_name: cloudstream-database
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=cloudstream_extensions
      - POSTGRES_USER=cloudstream
      - POSTGRES_PASSWORD=secure_password_123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - cloudstream-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cloudstream"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 🔄 خدمة التخزين المؤقت
  redis:
    image: redis:7-alpine
    container_name: cloudstream-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - cloudstream-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 🌐 خدمة الوكيل
  nginx:
    image: nginx:alpine
    container_name: cloudstream-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    networks:
      - cloudstream-network
    depends_on:
      - cloudstream-extensions

# 🌐 شبكة المشروع
networks:
  cloudstream-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# 💾 وحدات التخزين
volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  postgres_data:
    driver: local
  redis_data:
    driver: local

# 📝 ملاحظات الاستخدام:
# docker-compose up -d                    # تشغيل جميع الخدمات
# docker-compose down                     # إيقاف جميع الخدمات
# docker-compose logs -f [service_name]   # عرض السجلات
# docker-compose restart [service_name]   # إعادة تشغيل خدمة
# docker-compose ps                       # عرض حالة الخدمات
# docker-compose exec [service_name] bash # الدخول إلى الحاوية